name: Build and Release

on:
  push:
    branches:
      - main
      - dev
      - feature/**
      - hotfix/**
  workflow_run:
    workflows: ["Terragrunt Deploy"]
    types:
      - completed
  workflow_dispatch:
    inputs:
      release-type:
        description: 'What type of perform?'
        type: choice
        options:
          - test
          - build
          - deploy
        default: test

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: fake-data
  IMAGE_TAG: 'latest'

jobs:
  ## ===============================
  ## 1. Build Application
  ## ===============================
  buildApplication:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
  
    runs-on: ubuntu-latest

    outputs:
      image_tag: ${{ steps.set-tag.outputs.image_tag }}

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set IMAGE_TAG from branch
        id: set-tag
        run: |
          BRANCH_NAME=$(echo "${GITHUB_REF##*/}" | sed 's|[/-]|_|g')
          IMAGE_TAG="${BRANCH_NAME}_${GITHUB_RUN_ID}"
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          echo "image_tag=$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: 'temurin'

      - name: Run Unit Tests
        run: ./mvnw test

      - name: Build Spring Boot app
        run: ./mvnw clean package -DskipTests

      - name: Configure AWS credentials
        if: >
          github.event_name != 'workflow_dispatch' ||
          (github.event.inputs.release-type == 'build' || github.event.inputs.release-type == 'deploy')
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        if: >
          github.event_name != 'workflow_dispatch' ||
          (github.event.inputs.release-type == 'build' || github.event.inputs.release-type == 'deploy')
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push Docker image
        if: >
          github.event_name != 'workflow_dispatch' ||
          (github.event.inputs.release-type == 'build' || github.event.inputs.release-type == 'deploy')
        run: |
          IMAGE_URI=${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
          docker build -t $IMAGE_URI .
          docker push $IMAGE_URI

  ## ===============================
  ## 2. Update GitOps Repo
  ## ===============================
  processGitOps:
    runs-on: ubuntu-latest

    needs: buildApplication

    if: >
      github.event_name == 'workflow_dispatch' &&
      github.event.inputs.release-type == 'deploy'

    env:
      IMAGE_TAG: ${{ needs.buildApplication.outputs.image_tag }}

    steps:
      - name: Checkout GitOps repo
        uses: actions/checkout@v4
        with:
          repository: duongaity/fake-data-gitops
          token: ${{ secrets.GIT_TOKEN }}
          path: gitops

      - name: Update image tag in values.yaml
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            ENV_DIR="prod"
          else
            ENV_DIR="nonprod"
          fi

          cd gitops/$ENV_DIR
          sed -i "/image:/,/^[^ ]/s/tag:.*/tag: \"$IMAGE_TAG\"/" values.yaml

      - name: Set up Git identity
        run: |
          cd gitops
          git config user.name "Duong Aity"
          git config user.email "duongaity@gmail.com"

      - name: Commit and push changes
        run: |
          cd gitops
          echo "IMAGE_TAG = $IMAGE_TAG"
          git add .
          git commit -m "chore: update image tag to ${{ env.IMAGE_TAG }}"
          git push origin main